version: '3.5'

services:
 postgresdb:
  image: postgres:13.2-alpine
  restart: unless-stopped
  environment:
   POSTGRES_USER: user
   POSTGRES_PASSWORD: admin
   POSTGRES_DB: database
  container_name: postgresdb
  networks:
   - app-network

 redisdb:
  image: redis:latest
  container_name: redisdb
  networks:
   - app-network

 backend:
  build: ./dockerfile-backend
  container_name: compose-example-backend
  environment:
   REDIS_HOST: redisdb
   POSTGRES_HOST: postgresdb
   POSTGRES_USER: user
   POSTGRES_PASSWORD: admin
   POSTGRES_DATABASE: database
  ports:
   - 8080:8080
  depends_on: 
   - postgresdb
   - redisdb
  expose:
   - "8080"
  networks:
   - app-network
   
 frontend:
  build: ./dockerfile-frontend
  container_name: compose-example-frontend
  ports:
   - 5000:5000
  expose:
   - "5000"
  networks:
   - app-network
 
 nginx-proxy:
  image: nginx:1.19-alpine
  volumes: 
   - ./nginx.conf:/etc/nginx/nginx.conf
  ports: 
   - "80:80"
  expose:
   - "80"
  networks:
   - app-network
  depends_on:
   - backend
   - frontend
   
networks: 
 app-network:

  
